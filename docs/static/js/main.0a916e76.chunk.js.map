{"version":3,"sources":["components/Video.js","App.js","index.js"],"names":["Video","useState","video","audio","constrains","setConstrains","useEffect","console","log","document","getElementById","srcObject","getTracks","stop","navigator","mediaDevices","getUserMedia","then","stream","catch","err","error","style","transform","id","muted","autoPlay","onClick","width","offsetWidth","height","offsetHeight","canvas","createElement","getContext","drawImage","toDataURL","facingMode","exact","App","className","ReactDOM","render","StrictMode"],"mappings":"uOAEaA,EAAQ,WACnB,MAAoCC,mBAAS,CAACC,OAAO,EAAMC,OAAM,IAAjE,mBAAOC,EAAP,KAAmBC,EAAnB,KACAC,qBAAU,WACRC,QAAQC,IAAIJ,GACZ,IACE,IAAIF,EAAQO,SAASC,eAAe,WACpC,IAAIN,EAAWF,MAEb,YADAA,EAAMS,UAAUC,YAAY,GAAGC,OAGjCC,UAAUC,aAAaC,aAAaZ,GACjCa,MAAK,SAAUC,GACVhB,IACFA,EAAMS,UAAYO,MAGrBC,OAAM,SAAUC,GACfb,QAAQc,MAAMD,MAGlB,MAAOA,GACPb,QAAQC,IAAIY,MAEd,CAAChB,IAyBH,OACE,gCACE,8BACE,uBAAOkB,MAAO,CAAEC,UAAW,cAAgBC,GAAG,UAAUC,OAAK,EAACC,UAAQ,MAExE,gCACE,wBAAQC,QA9BD,WACXtB,EAAc,2BAAID,GAAL,IAAiBF,OAAOE,EAAWF,UA6B5C,eACA,wBAAQyB,QAnBE,WACd,IAAMzB,EAAQO,SAASC,eAAe,WAChCkB,EAAQ1B,EAAM2B,YACdC,EAAS5B,EAAM6B,aACjBC,EAASvB,SAASwB,cAAc,UACpCD,EAAOJ,MAAQA,EACfI,EAAOF,OAASA,EAChBE,EAAOV,MAAMC,UAAY,aACzBS,EAAOE,WAAW,MAAMC,UAAUjC,EAAO,EAAG,EAAG0B,EAAME,GACrDvB,QAAQC,IAAIwB,EAAOI,cAUf,eACA,wBAAQT,QA7BI,WACbvB,EAAWF,QACuB,SAAhCE,EAAWF,MAAMmC,WAClBhC,EAAc,2BAAID,GAAL,IAAiBF,MAAM,CAAEmC,WAAW,CAAEC,MAAO,mBAE1DjC,EAAc,2BAAID,GAAL,IAAiBF,MAAM,CAACmC,WAAW,aAwBhD,sBC/COE,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASC,eAAe,W","file":"static/js/main.0a916e76.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nexport const Video = () => {\r\n  const [constrains, setConstrains] = useState({video: true, audio:false})\r\n  useEffect(() => {\r\n    console.log(constrains);\r\n    try {\r\n      let video = document.getElementById('player2');\r\n      if(!constrains.video){\r\n        video.srcObject.getTracks()[0].stop();\r\n        return;\r\n      }\r\n      navigator.mediaDevices.getUserMedia(constrains)\r\n        .then(function (stream) {\r\n          if (video) {\r\n            video.srcObject = stream;\r\n          }\r\n        })\r\n        .catch(function (err) {\r\n          console.error(err)\r\n        });\r\n      \r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  },[constrains]);\r\n  const OnOf = () =>{\r\n    setConstrains({...constrains, video:!constrains.video});\r\n  }\r\n  const changeCam = () =>{\r\n    if(constrains.video){\r\n      if(constrains.video.facingMode === \"user\"){\r\n        setConstrains({...constrains, video:{ facingMode:{ exact: \"environment\"}}});\r\n      }else{\r\n        setConstrains({...constrains, video:{facingMode:\"user\"}});\r\n      }\r\n    }\r\n  }\r\n  const capture = () =>{\r\n    const video = document.getElementById('player2');\r\n    const width = video.offsetWidth\r\n        , height = video.offsetHeight;\r\n    var canvas = document.createElement('canvas');\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    canvas.style.transform = 'scaleX(-1)';\r\n    canvas.getContext('2d').drawImage(video, 0, 0, width,height);\r\n    console.log(canvas.toDataURL());\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <video style={{ transform: 'scaleX(-1)' }} id=\"player2\" muted autoPlay></video>\r\n      </div>\r\n      <div>\r\n        <button onClick={OnOf}>a</button>\r\n        <button onClick={capture}>b</button>\r\n        <button onClick={changeCam}>c</button>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n","import './App.css';\nimport { Video } from './components/Video';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Video/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}